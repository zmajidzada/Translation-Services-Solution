//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebSiteApplication.FormManagementServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormModel", Namespace="www.zab.com")]
    [System.SerializableAttribute()]
    public partial class FormModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FormIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FormCategoryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FormId {
            get {
                return this.FormIdField;
            }
            set {
                if ((this.FormIdField.Equals(value) != true)) {
                    this.FormIdField = value;
                    this.RaisePropertyChanged("FormId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FormName {
            get {
                return this.FormNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FormNameField, value) != true)) {
                    this.FormNameField = value;
                    this.RaisePropertyChanged("FormName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string FormCategory {
            get {
                return this.FormCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.FormCategoryField, value) != true)) {
                    this.FormCategoryField = value;
                    this.RaisePropertyChanged("FormCategory");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ApplicationModel", Namespace="http://schemas.datacontract.org/2004/07/TranslationWebServices")]
    [System.SerializableAttribute()]
    public partial class ApplicationModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((this.ApplicationIdField.Equals(value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationName {
            get {
                return this.ApplicationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationNameField, value) != true)) {
                    this.ApplicationNameField = value;
                    this.RaisePropertyChanged("ApplicationName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FormManagementServiceReference.IFormManagmentService")]
    public interface IFormManagmentService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/ListForms", ReplyAction="http://tempuri.org/IFormManagmentService/ListFormsResponse")]
        WebSiteApplication.FormManagementServiceReference.FormModel[] ListForms(int appNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/ListForms", ReplyAction="http://tempuri.org/IFormManagmentService/ListFormsResponse")]
        System.Threading.Tasks.Task<WebSiteApplication.FormManagementServiceReference.FormModel[]> ListFormsAsync(int appNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/ListFormsName", ReplyAction="http://tempuri.org/IFormManagmentService/ListFormsNameResponse")]
        System.Data.DataSet ListFormsName(int appNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/ListFormsName", ReplyAction="http://tempuri.org/IFormManagmentService/ListFormsNameResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> ListFormsNameAsync(int appNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/AddNewForm", ReplyAction="http://tempuri.org/IFormManagmentService/AddNewFormResponse")]
        string AddNewForm(WebSiteApplication.FormManagementServiceReference.FormModel formModel, WebSiteApplication.FormManagementServiceReference.ApplicationModel applicationModel, string updatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/AddNewForm", ReplyAction="http://tempuri.org/IFormManagmentService/AddNewFormResponse")]
        System.Threading.Tasks.Task<string> AddNewFormAsync(WebSiteApplication.FormManagementServiceReference.FormModel formModel, WebSiteApplication.FormManagementServiceReference.ApplicationModel applicationModel, string updatedBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/RetrieveForm", ReplyAction="http://tempuri.org/IFormManagmentService/RetrieveFormResponse")]
        WebSiteApplication.FormManagementServiceReference.FormModel RetrieveForm(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/RetrieveForm", ReplyAction="http://tempuri.org/IFormManagmentService/RetrieveFormResponse")]
        System.Threading.Tasks.Task<WebSiteApplication.FormManagementServiceReference.FormModel> RetrieveFormAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/UpdateForm", ReplyAction="http://tempuri.org/IFormManagmentService/UpdateFormResponse")]
        bool UpdateForm(int formId, WebSiteApplication.FormManagementServiceReference.FormModel formModel, string updateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/UpdateForm", ReplyAction="http://tempuri.org/IFormManagmentService/UpdateFormResponse")]
        System.Threading.Tasks.Task<bool> UpdateFormAsync(int formId, WebSiteApplication.FormManagementServiceReference.FormModel formModel, string updateBy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/DeleteForm", ReplyAction="http://tempuri.org/IFormManagmentService/DeleteFormResponse")]
        string DeleteForm(int formId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFormManagmentService/DeleteForm", ReplyAction="http://tempuri.org/IFormManagmentService/DeleteFormResponse")]
        System.Threading.Tasks.Task<string> DeleteFormAsync(int formId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFormManagmentServiceChannel : WebSiteApplication.FormManagementServiceReference.IFormManagmentService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FormManagmentServiceClient : System.ServiceModel.ClientBase<WebSiteApplication.FormManagementServiceReference.IFormManagmentService>, WebSiteApplication.FormManagementServiceReference.IFormManagmentService {
        
        public FormManagmentServiceClient() {
        }
        
        public FormManagmentServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FormManagmentServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormManagmentServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FormManagmentServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebSiteApplication.FormManagementServiceReference.FormModel[] ListForms(int appNo) {
            return base.Channel.ListForms(appNo);
        }
        
        public System.Threading.Tasks.Task<WebSiteApplication.FormManagementServiceReference.FormModel[]> ListFormsAsync(int appNo) {
            return base.Channel.ListFormsAsync(appNo);
        }
        
        public System.Data.DataSet ListFormsName(int appNo) {
            return base.Channel.ListFormsName(appNo);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> ListFormsNameAsync(int appNo) {
            return base.Channel.ListFormsNameAsync(appNo);
        }
        
        public string AddNewForm(WebSiteApplication.FormManagementServiceReference.FormModel formModel, WebSiteApplication.FormManagementServiceReference.ApplicationModel applicationModel, string updatedBy) {
            return base.Channel.AddNewForm(formModel, applicationModel, updatedBy);
        }
        
        public System.Threading.Tasks.Task<string> AddNewFormAsync(WebSiteApplication.FormManagementServiceReference.FormModel formModel, WebSiteApplication.FormManagementServiceReference.ApplicationModel applicationModel, string updatedBy) {
            return base.Channel.AddNewFormAsync(formModel, applicationModel, updatedBy);
        }
        
        public WebSiteApplication.FormManagementServiceReference.FormModel RetrieveForm(int id) {
            return base.Channel.RetrieveForm(id);
        }
        
        public System.Threading.Tasks.Task<WebSiteApplication.FormManagementServiceReference.FormModel> RetrieveFormAsync(int id) {
            return base.Channel.RetrieveFormAsync(id);
        }
        
        public bool UpdateForm(int formId, WebSiteApplication.FormManagementServiceReference.FormModel formModel, string updateBy) {
            return base.Channel.UpdateForm(formId, formModel, updateBy);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateFormAsync(int formId, WebSiteApplication.FormManagementServiceReference.FormModel formModel, string updateBy) {
            return base.Channel.UpdateFormAsync(formId, formModel, updateBy);
        }
        
        public string DeleteForm(int formId) {
            return base.Channel.DeleteForm(formId);
        }
        
        public System.Threading.Tasks.Task<string> DeleteFormAsync(int formId) {
            return base.Channel.DeleteFormAsync(formId);
        }
    }
}
